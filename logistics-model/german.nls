breed [german-corps a-german-corps]

german-corps-own [supply current-junction]

to setup-germans
  let x [xcor] of one-of junctions with [label = "Brussels"]
  let y [ycor] of one-of junctions with [label = "Brussels"]
  set-default-shape german-corps "square"
  
  create-german-corps 1 [
    setxy x y
    set supply 100
    set current-junction "Brussels"
    set color yellow
    set size 2
  ]
end

to step-german
  move-german-corps
  check-french-corps
  supply-german-corps
end

to move-german-corps
  nw:set-context junctions roads
  let junction-label [current-junction] of one-of german-corps
  ask one-of junctions with [label = junction-label] [
    set shortest-path nw:turtles-on-path-to one-of junctions with [label = "Meaux"]
  ]
;  show shortest-path
  let next-junction item 1 shortest-path
  ask german-corps [
    move-to next-junction
    set current-junction [label] of next-junction
  ]
end

;; Check for french corps in perimeter
;; TODO: change this but for now:
;; pursue_rad = 10: if w/i 10 => pursue
;; attack_rad = 5; if w/i 5 => fight
;; If french corp turtle is w/i above rads => pursue or fight
to check-french-corps
  ask german-corps [ 
    if any? french-corps in-radius 10 [
      ifelse any? french-corps in-radius 5 
        [ attack-french-corps ]
        [ pursue-french-corps ]
    ]
  ]
end

to pursue-french-corps

   ;; do things
end

to attack-french-corps

   ;; do things
end

to supply-german-corps
  let station-modifier station-resupply * (1 / (station-damage + 1.0)) + random-float 5 - 2.5
  
  ; TODO: ONLY lose supply during battle!!!!
  ask german-corps [set supply supply - 10 + station-modifier ]
end