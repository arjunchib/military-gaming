breed [german-corps a-german-corps]

german-corps-own [supply current-junction]

to setup-germans
  set-default-shape german-corps "square"
  
  let start-station one-of stations with [label = "Brussels"]
  
  create-german-corps 1 
  [
    setxy [xcor] of start-station [ycor] of start-station
    set supply 100
    set current-junction "Brussels"
    set color yellow
    set size 2
  ]
end

to step-german
  check-french-corps
  supply-german-corps
end

;; dest_label: label of the destination
;; This proc moves the German corps along the shortest path between the 
;; current location of the German corps and the destination
to move-german-corps [ dest_label ]
  nw:set-context junctions roads
  let junction-label [current-junction] of one-of german-corps
  let shortest-path (list current-junction)
  ask one-of junctions with [label = junction-label] 
  [
    set shortest-path nw:turtles-on-path-to one-of junctions with [label = dest_label]
  ]
   show shortest-path
  let next-junction item 1 shortest-path
  ask german-corps
  [
    move-to next-junction
    set current-junction [label] of next-junction
  ]
end

;; Check to see if French corps are nearby
;; If within pursue-rad => Pursue
;;      If within attack-rad => Attack
;; Else keep moving towards Meaux
to check-french-corps
  ask german-corps 
  [ 
    ;; Only pursue/attack french-corps if they're alive
    ifelse any? french-corps in-radius pursue-radius and [size] of one-of french-corps > 0
    [
      ;; If in attack-rad => attack
      ifelse any? french-corps in-radius attack-radius
      [ 
        attack-french-corps 
      ]
      ;; Else, keep moving toward
      [ 
        pursue-french-corps
      ]
    ]
    [ 
      print "Not near French-corps or French-corps are all dead; Moving towards Meaux"
      ;move-german-corps "Meaux"    
    ]
  ]
end

to pursue-french-corps
  print "Pursuing French-corps" 
  
  ;; Follow French's movement direction
  ;move-german-corps [current-junction] of one-of french-corps
end

to attack-french-corps
  ;; Reduce french-corps size?
  print "Attacking french-corps"
  
  ;; Fight
  ;; For now just decrease the size of french-corps
  ask french-corps [ set size size - 1 ]
  
  ;; Lose supply
  ask german-corps [ set supply supply - supply-decay ]
end

to supply-german-corps
  let station-modifier station-resupply * (1 / (station-damage + 1.0)) + random-float 5 - 2.5

  ;; ONLY lose supply (-supply-decay) during battle!!
  ask german-corps [set supply supply + station-modifier ]
end